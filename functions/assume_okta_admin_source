#!/bin/bash
function assume_okta_admin_source() {

  ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn arn:aws:iam::710015040892:role/okta.admin --role-session-name admin-modify-session)
  echo $ASSUME_ROLE_OUTPUT | jq -r '.Credentials | .["AWS_ACCESS_KEY_ID"] = .AccessKeyId | .["AWS_SECRET_ACCESS_KEY"] = .SecretAccessKey | .["AWS_SECURITY_TOKEN"] = .SessionToken | del(.AccessKeyId, .SecretAccessKey, .SessionToken, .Expiration) | to_entries[] | "export \(.key)=\(.value)"'

  #echo  $ASSUME_ROLE_ENVIRONMENT
  #assumed_role_creds=$(aws sts assume-role --role-arn arn:aws:iam::710015040892:role/okta.admin --role-session-name admin-modify-session)

  ##echo $assumed_role_creds
  ##echo $assumed_role_creds | jq '.'
  ##echo "$assumed_role_creds" | jq -r '.Credentials.AccessKeyId'
  #echo "export AWS_ACCESS_KEY_ID=$(echo $assumed_role_creds | jq -r '.Credentials.AccessKeyId' )"
  #echo "export AWS_SECRET_ACCESS_KEY=$(echo $assumed_role_creds | jq -r '.Credentials.SecretAccessKey' )"
  #echo "export AWS_SESSION_TOKEN=$(echo $assumed_role_creds | jq -r '.Credentials.SessionToken' )"
  #echo 'export AWS_SECURITY_TOKEN='
}
