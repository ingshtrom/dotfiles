#!/usr/bin/env bash
#
# Usage: git-workspace-setup
#
# Fork git repo, clone it bare, set up remotes. All for working with worktrees
#
# Requires:
#   - GitHub CLI

# set -x
set -e

red=`tput setaf 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
reset=`tput sgr0`

# repo_namespace=${1}
# repo_name=${2}


echo "${yellow}Here are the current workspace repositories:${reset}"
ls -al "${HOME}/workspace"
echo
echo
echo "${yellow}What is the ${red}namespace${yellow} of the GitHub repository you want to fork?${reset}"
read repo_namespace
echo
echo "${yellow}What is the ${red}name${yellow} of the GitHub repository you want to fork?${reset}"
read repo_name
echo

if [[ "$(pwd)" != "${HOME}/workspace" ]];
then
  cd "${HOME}/workspace"
fi

# 1. fork the repo
# 2. clone --bar the repo
# 3. set up remotes with origin and upstream
# 4. git worktree add main and cd into it
did_fork_fail="false"
if ! gh repo fork "${repo_namespace}/${repo_name}" --clone=false;
then
  echo 'fork is likely disabled, moving forward ðŸ˜€'
  did_fork_fail="true"
fi

git clone --bare "git@github.com:${repo_namespace}/${repo_name}" "${repo_name}"

cd "${repo_name}"

git worktree add main

cd main

if [[ "$did_fork_fail" == "false" ]];
then
  git remote remove origin

  git remote add origin git@github.com:ingshtrom/${repo_name}.git
  git remote add upstream git@github.com:${repo_namespace}/${repo_name}.git

  gh repo set-default ${repo_namespace}/${repo_name}
fi


git-up

echo
echo '----------------------------'
echo
echo "${green}Git Workspace setup!"
echo $reset
echo "name: ${repo_name}"
echo "path: ${HOME}/workspace/${repo_name}"

