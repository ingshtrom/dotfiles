# Path to your oh-my-zsh installation.
export PROJECTS="$HOME/src"
export ZSH_AUTOSUGGEST_USE_ASYNC=true
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=blue,bold'
export ZSH_THEME="agnoster"
export HYPHEN_INSENSITIVE="false"
export UPDATE_ZSH_DAYS=1
export ENABLE_CORRECTION="false" # do not autocomplete without me being prompted
export COMPLETION_WAITING_DOTS="true"
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/.dotfiles
_uname="$(uname)"

if [[ "$_uname" == "Linux" ]]
then
  export TERM="tmux-256color"
  export PATH="/home/linuxbrew/.linuxbrew/sbin:$PATH"
  export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
  source "$HOME/.local/share/lscolors.sh"

  alias ls="ls --color"
  alias pbcopy='xclip -selection clipboard'
  alias pbpaste='xclip -selection clipboard -o'
  alias open="xdg-open"

  # capslock becomes another ctrl
  /usr/bin/env setxkbmap -option "ctrl:nocaps"

  # make the logitech mouse acceleration to 1 (faster than the default 0)
  if xinput | grep 'Logitech G400s Optical Gaming Mouse' > /dev/null
  then
    xinput --set-prop 'Logitech G400s Optical Gaming Mouse' 'libinput Accel Speed' 1
  fi
else
  export TERM="screen-256color"
  export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

  #alias ls="ls -FG"
fi

plugins=(zsh-autosuggestions zsh-syntax-highlighting)

source "$ZSH/oh-my-zsh.sh"

autoload -Uz compinit
compinit

# only for Docker work
source "$PROJECTS/tools/user/ahokanson/bash-functions.sh";
source "$PROJECTS/tools/user/ahokanson/bash-functions-personal.sh"
source "$PROJECTS/tools/user/ahokanson/aliases.sh";

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
 source ~/.localrc
fi

################################################################################################
# ALIASES
hub_path=$(which hub)
alias git=${hub_path:-git}

# The rest of my fun git aliases
alias gl='git log'
alias glg="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
# Remove `+` and `-` from start of diff lines; just rely upon color.
#alias gd='git diff --color | sed "s/^\([^-+ ]*\)[-+ ]/\\1/" | less -r'
alias gd='git diff'
alias gc='git checkout'
alias gb='git branch --sort=-committerdate'
alias gcom='git add -A && git commit -s'
alias gac='git add -A && git commit -s'
# alias gps='docker run --rm --name=gitleaks -v $(git rev-parse --show-toplevel):/tmp zricethezav/gitleaks -v --repo-path=/tmp && git push'
alias gps='git push'
alias gp='git pull'
alias gs='git status'
alias ga='git add --all'
alias gl='docker run --rm --name=gitleaks -v $(git rev-parse --show-toplevel):/tmp zricethezav/gitleaks -v --repo-path=/tmp'
alias gg='cd $(git rev-parse --show-toplevel)'

alias docker_login_ahokanson='echo $AHOKANSON_DOCKER_HUB_TOKEN | docker login --username ahokanson --password-stdin'
alias docker_login_ingshtrom='echo $INGSHTROM_DOCKER_HUB_TOKEN | docker login --username ingshtrom --password-stdin'

alias cls="clear && printf '\e[3J'" # clear screen AND history. BOOM!
alias ti='terraform init'
alias ta='terraform apply'
alias to='terraform output'
alias tg='terraform graph'
alias ts='terraform show'
alias tp='terraform plan'

alias cur='aws iam list-account-aliases | jq ".AccountAliases[0]"'
alias awsd='aws-okta exec dockerinc.admin -- docker run --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN --env AWS_SECURITY_TOKEN --rm -it amazon/aws-cli' # aws in docker
alias a='awsd'

# Pipe my public key to my clipboard.
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"
alias saa="ssh-add $HOME/.ssh/dckr-default && ssh-add $HOME/.ssh/dckr-infra && ssh-add $HOME/.ssh/dckr-swarm && ssh-add $HOME/.ssh/dckr-nautilus"

alias d="docker"
alias kc="kubectx"
alias kn="kubens"

alias sslyze="docker run --rm -it nablac0d3/sslyze"

alias curl_gnu="/usr/local/opt/curl/bin/curl"

#alias t="tmux"
alias todo="$(brew --prefix)/bin/todo.sh -ANtc"
alias t="task"

alias dir_diff="diff -r -x .git -x .terraform -N"

alias yk_code="ykman oath code $1"
alias yk_code_search="ykman oath code | grep -i '$@'"

 alias veracrypt="/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt --text"
 alias vc="veracrypt"


# pulseaudio-equalizier
alias peq="qpaeq"
alias pulse-equalizer="qpaeq"

# colors
alias print_colors='for i in {0..255}; do print -Pn "%K{$i} %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%8)):#7}:+\\n}; done'

alias aol='function(){aws-okta login "$@"}'
alias aold='function(){aws-okta login dockerinc}'
alias aoe='function(){aws-okta exec "$1" "${@:2}"}'
alias aoed='function(){aws-okta exec dockerinc "${@:2}"}'
alias ao='function(){aws-okta "$@"}'
alias aod='function(){aws-okta dockerinc}'
alias aox='function(){eval $(aws-okta exec "$@" -- env | grep AWS | sed "s/^/export /");}'
alias aoxd='function(){eval $(aws-okta exec dockerinc -- env | grep AWS | sed "s/^/export /");}'

alias lpass_search='lpass ls | grep -i "$@"'

alias ecr_login='aws ecr get-login --no-include-email --region us-east-1 | sh'

alias gpg_list_encrypted_with='gpg --batch --list-packets $1 2>&1'

# FROM https://github.com/ahmetb/kubectl-aliases
#
# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################################
# Rust
export PATH="$HOME/.cargo/bin:$PATH"

################################################################################################
# Go Lang
export GOPATH=$PROJECTS/go
export PATH="$GOPATH/bin:$PATH"
export PATH="/usr/local/go/bin:$PATH"

################################################################################################
# Node.js
# Would normally be added by n-install (see http://git.io/n-install-repo).
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"

################################################################################################
# GNU Utils
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

################################################################################################
# YARN
# https://yarnpkg.com

# up to date Ruby
export PATH="/usr/local/opt/ruby/bin:$PATH"

# unix curl
# NOTE: commented out because OSX Curl includes many more features now (HTTP2)
# export PATH="/usr/local/opt/curl/bin:$PATH"

# Python3 is the default now
export PATH="/usr/local/opt/python/libexec/bin:$PATH"

# ZSH function fpath for loading auto-completion
fpath=(/usr/local/share/zsh-completions $fpath)

# Homebrew for linux/mac
export PATH="$PATH:$(brew --prefix)/bin"

# Buildkit standalone binaries
export PATH="$PATH:/usr/local/buildkit/bin"


################################################################################################
# System
export PATH="./bin:/usr/local/bin:/usr/local/sbin:$DOTFILES/bin:$PATH"
export MANPATH="/usr/local/man:/usr/local/mysql/man:/usr/local/git/man:$MANPATH"
export EDITOR='nvim'
export VISUAL='nvim'

# create misc bin for personal usage
# that overwrites all other binaries
mkdir -p "$HOME/.bin"
export PATH="$HOME/.bin:$PATH"



############################################################
## General Shell Configuration
############################################################export LSCOLORS="exfxcxdxbxegedabagacad"
export CLICOLOR=true

fpath=($DOTFILES/functions $fpath)

autoload -U $DOTFILES/functions/*(:t)

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt SHARE_HISTORY # share history between sessions ???
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

# don't expand aliases _before_ completion has finished
#   like: git comm-[tab]
setopt complete_aliases

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
bindkey '^[[3~' delete-char
bindkey '^?' backward-delete-char

# zsh history
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zsh_history  # ensure history file visibility
export HH_CONFIG=hicolor        # get more colors
bindkey -s "\\C-r" "\\eqhh\\n"     # bind hh to Ctrl-r (for Vi mode check doc)

# FZF FuZzy Finder
# fzf default command
# --files: List files that would be searched but do not search
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# use `bat` for manpages--it's sexy!
# ref: https://github.com/sharkdp/bat#man
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# so delta will properly let me use the mouse to scroll
if [[ "$_uname" == "Linux" ]]
then
  export PAGER="less --RAW-CONTROL-CHARS --quit-if-one-screen --mouse --wheel-lines=10"
else
  export PAGER="less --RAW-CONTROL-CHARS"
fi
export BAT_PAGER="$PAGER"

export PATH="${PATH}:${HOME}/.krew/bin"
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

autoload -U +X bashcompinit && bashcompinit

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ~/.kube/config is the source of truth, but we don't want to write to it
KUBECONFIG=$HOME/.kube/config
tmpdir=$(mktemp -d)
new_kubeconfig="${tmpdir}/kubeconfig"
cp $KUBECONFIG $new_kubeconfig
export KUBECONFIG=$new_kubeconfig

alias ls="logo-ls --almost-all --human-readable --git-status"

############################################################
## PYENV INIT
############################################################
export PYENV_ROOT="$HOME/.dotfiles/python/pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
eval "$(direnv hook $SHELL)"

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
if ! (echo $VIRTUAL_ENV | grep general3 > /dev/null)
then
  pyenv activate general3 || true >/dev/null 2>/dev/null # I guess this is already set sometimes and so it fails?
fi

############################################################
## STARSHIP PROMPT INIT
############################################################
export STARSHIP_CONFIG=$HOME/.starship.toml
eval "$(starship init zsh)"

############################################################
## RBENV/RUBY INIT
############################################################
eval "$(rbenv init -)"

############################################################
## GPG CONFIGURATION
############################################################
export GPG_TTY=$(tty)

############################################################
## CHAMBER CONFIGURATION
############################################################
CHAMBER_SECRET_BACKEND=ssm
CHAMBER_KMS_KEY_ALIAS=aws/ssm
